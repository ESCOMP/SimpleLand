#!/usr/bin/env python

"""
build clm library
"""
import sys, os, time, filecmp, shutil, imp

_CIMEROOT = os.environ.get("CIMEROOT")
if _CIMEROOT is None:
    raise SystemExit("ERROR: must set CIMEROOT environment variable")

_LIBDIR = os.path.join(_CIMEROOT, "scripts", "Tools")
sys.path.append(_LIBDIR)

from standard_script_setup import *
from CIME.buildlib import parse_input
from CIME.case import Case
from CIME.utils import run_cmd, expect

logger = logging.getLogger(__name__)

###############################################################################
def _main_func():
###############################################################################

    caseroot, libroot, bldroot = parse_input(sys.argv)

    with Case(caseroot) as case:

        casetools = case.get_value("CASETOOLS")
        lnd_root = case.get_value("COMP_ROOT_DIR_LND")
        gmake_j = case.get_value("GMAKE_J")
        gmake = case.get_value("GMAKE")
        mach = case.get_value("MACH")
        nthrds = case.get_value("LND_NTHRDS")

        clm_config_opts = case.get_value("CLM_CONFIG_OPTS")
        if "clm4_5" in clm_config_opts:
            clm_phys = "clm4_5"
        elif "clm5_0" in clm_config_opts:
            clm_phys = "clm5_0"
        else:
            expect(False, "CLM_CONFIG_OPTS must support either clm4_5 or clm5_0 physics")

        if ( nthrds > 1 ):
            expect(False, "LND_NTHRDS must be 1 as threading isn't implemented (see issue #14)" )

        #-------------------------------------------------------
        # create Filepath file for clm4_5 or clm5_0
        #-------------------------------------------------------
        filepath_file = os.path.join(bldroot,"Filepath")
        if not os.path.isfile(filepath_file):
            caseroot = case.get_value("CASEROOT")
            paths = [os.path.join(caseroot,"SourceMods","src.clm"), 
                     os.path.join(lnd_root,"src","main"),
                     os.path.join(lnd_root,"src","biogeophys"),
                     os.path.join(lnd_root,"src","biogeochem"),
                     os.path.join(lnd_root,"src","soilbiogeochem"),
                     os.path.join(lnd_root,"src","init_interp"),
                     os.path.join(lnd_root,"src","utils"),
                     os.path.join(lnd_root,"src","cpl")]

            with open(filepath_file, "w") as filepath:
                filepath.write("\n".join(paths))
                filepath.write("\n")
            
        #-------------------------------------------------------
        # create the library in libroot
        #-------------------------------------------------------

        clm_config_opts = case.get_value("CLM_CONFIG_OPTS")
        complib = os.path.join(libroot,"libclm.a")
        makefile = os.path.join(casetools, "Makefile")
        macfile  = os.path.join(caseroot, "Macros.%s" % mach)

        cmd = "%s complib -j %d MODEL=clm COMPLIB=%s -f %s MACFILE=%s " \
               % (gmake, gmake_j, complib, makefile, macfile )

        rc, out, err = run_cmd(cmd)
        logger.info("%s: \n\n output:\n %s \n\n err:\n\n%s\n"%(cmd,out,err))
        expect(rc == 0, "Command %s failed with rc=%s" % (cmd, rc))

###############################################################################

if __name__ == "__main__":
    _main_func()

